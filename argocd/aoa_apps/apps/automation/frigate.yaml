apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: frigate
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    name: in-cluster
    namespace: frigate
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        goldilocks.fairwinds.com/enabled: "true"
        pod-security.kubernetes.io/enforce: privileged
  sources:
    - repoURL: https://bjw-s-labs.github.io/helm-charts
      chart: app-template
      targetRevision: 4.3.0
      helm:
        releaseName: frigate
        valuesObject:

          defaultPodOptions:
            nodeSelector:
              feature.node.kubernetes.io/pci-0880_1ac1_089a.present: "true"

          controllers:
            frigate:
              annotations:
                reloader.stakater.com/auto: "true"
              containers:
                app:
                  image:
                    repository: ghcr.io/blakeblackshear/frigate
                    tag: 0.16.2@sha256:4041ad318224500cf9513c513b1bb927d9dd252f63bbd3d11c92006c1172c86c
                    # 0.16.12 https://github.com/blakeblackshear/frigate/pkgs/container/frigate/505907123?tag=0.16.1
                  env:
                    TZ: America/Denver
                    PLUS_API_KEY: <path:cluster-secrets:cluster-secrets#frigate-plus-api-key>
                  probes:
                    liveness: &probes
                      enabled: true
                      custom: true
                      spec:
                        httpGet:
                          path: /api/version
                          port: &port 5000
                        initialDelaySeconds: 0
                        periodSeconds: 10
                        timeoutSeconds: 1
                        failureThreshold: 3
                    readiness: *probes
                    startup:
                      enabled: false
                  securityContext:
                    privileged: true
                  resources:
                    requests:
                      gpu.intel.com/i915: "1"
                    limits:
                      gpu.intel.com/i915: "1"
                  # command:
                  #   - /bin/sh
                  # args:
                  #   - -c
                  #   - |
                  #     mkdir /config/model_cache


          service:
            app:
              controller: frigate
              ports:
                http:
                  port: *port
                rtsp:
                  enabled: true
                  port: 8554

          route:
            main:
              parentRefs:
                - name: internal
                  namespace: gateway
                  # sectionName: https
              hostnames:
                - frigate-k8s.<path:cluster-secrets:cluster-secrets#domain>
              rules:
                - matches:
                    - path:
                        type: PathPrefix
                        value: /
                  backendRefs:
                    - kind: Service
                      port: 5000
                      name: frigate
                      namespace: frigate
                      weight: 1

          persistence:
            data:
              enabled: true
              existingClaim: frigate-data
              globalMounts:
                - path: /data
            config:
              enabled: true
              existingClaim: frigate-config
              globalMounts:
                - path: /config
            config-file:
              type: configMap
              name: frigate-configmap
              globalMounts:
                - path: /config/config.yaml
                  subPath: config.yaml
                  readOnly: true
            media:
              enabled: true
              type: nfs
              server: ds1515-nfs.k8s.<path:cluster-secrets:cluster-secrets#domain>
              path: /volume1/frigate
              globalMounts:
                # take /frigate and mount it to /media/frigate
                - path: /media/frigate
            cache:
              type: emptyDir
              medium: Memory
              sizeLimit: 4Gi
              globalMounts:
                - path: /dev/shm
            coral:
              type: hostPath
              hostPath: /dev/apex_0
              hostPathType: CharDevice

            # model_cache:
            #   type: emptyDir
            #   # medium: Memory
            #   sizeLimit: 8Gi
            #   globalMounts:
            #     - path: /config
