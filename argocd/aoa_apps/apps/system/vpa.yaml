apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vpa
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    name: in-cluster
    namespace: vpa
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  source:
    chart: vpa
    repoURL: https://charts.fairwinds.com/stable
    targetRevision: 4.9.0
    helm:
      releaseName: vpa
      valuesObject:
        # Goldilocks doesn't do any recommending of resource requests/limits
        # by itself. It utilizes a Kubernetes project called Vertical Pod Autoscaler (VPA)
        # (opens new window). More specifically, it uses the Recommender (opens new window)
        # portion of the VPA.
        recommender:
          enabled: true
          resources:
            requests:
              cpu: 15m
              memory: 145M
            limits:
              memory: 174M
          extraArgs:
            pod-recommendation-min-cpu-millicores: 15
            pod-recommendation-min-memory-mb: 61
            # storage: prometheus
            # prometheus-address: |-
              # http://thanos-query.system-monitoring.svc.cluster.local:9090
        updater:
          enabled: false
        admissionController:
          enabled: false
