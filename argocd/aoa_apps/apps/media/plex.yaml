apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: plex
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    name: in-cluster
    namespace: plex
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        goldilocks.fairwinds.com/enabled: "true"
  sources:
    - repoURL: https://bjw-s-labs.github.io/helm-charts
      chart: app-template
      targetRevision: 4.2.0
      helm:
        releaseName: plex
        valuesObject:
          controllers:
            plex:
              annotations:
                reloader.stakater.com/auto: "true"
              pod:
                securityContext:
                  runAsUser: 2000
                  runAsGroup: 2000
                  runAsNonRoot: true
                  fsGroup: 2000
                  fsGroupChangePolicy: "OnRootMismatch"
              containers:
                app:
                  image:
                    repository: ghcr.io/home-operations/plex
                    tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
                  env:
                    TZ: America/Denver
                    # PLEX_ADVERTISE_URL: "https://plex-k8s.<path:cluster-secrets:cluster-secrets#domain>:32400/" avp errors here when we try and do both URL on a single line
                    PLEX_ADVERTISE_URL: https://10.0.5.220:32400,https://plex-k8s.piccola.us:443,
                    PLEX_NO_AUTH_NETWORKS: 10.0.0.0/16
                  probes:
                    liveness: &probes
                      enabled: true
                      custom: true
                      spec:
                        httpGet:
                          path: /identity
                          port: 32400
                        initialDelaySeconds: 0
                        periodSeconds: 10
                        timeoutSeconds: 1
                        failureThreshold: 3
                    readiness: *probes
                    startup:
                      enabled: true
                      spec:
                        failureThreshold: 30
                        periodSeconds: 10
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                    capabilities: { drop: ["ALL"] }
                  # resources:
                  #   requests:
                  #     cpu: 25m
                  #     memory: 4282M
                  #   limits:
                  #     memory: 16Gi
                  resources:
                    requests:
                      gpu.intel.com/i915: "1"
                    limits:
                      gpu.intel.com/i915: "1"
          service:
            app:
              controller: plex
              type: LoadBalancer
              annotations:
                io.cilium/lb-ipam-ips: 10.0.5.220 # plex requires it's own IP bc we NAT to it via this address
              externalTrafficPolicy: Cluster
              ports:
                http:
                  port: 32400

          route:
            # -- Enable and configure route settings for the chart under this key.
            main:
              parentRefs:
                - name: internal
                  namespace: gateway
                  # sectionName: gateway-section
              hostnames:
                - plex-k8s.<path:cluster-secrets:cluster-secrets#domain>
              rules:
                - matches:
                    - path:
                        type: PathPrefix
                        value: /
                  backendRefs:
                    - kind: Service
                      port: 32400
                      name: plex
                      namespace: plex
                      weight: 1

          # persistence:
          #   config:
          #     existingClaim: plex-config
          #   cache:
          #     existingClaim: plex-cache
          #     globalMounts:
          #       - path: /config/Library/Application Support/Plex Media Server/Cache
          #   logs:
          #     type: emptyDir
          #     globalMounts:
          #       - path: /config/Library/Application Support/Plex Media Server/Logs
          #   tmp:
          #     type: emptyDir
          #   transcode:
          #     type: emptyDir
          #   media:
          #     existingClaim: media-nfs-media
          #     globalMounts:
          #       - path: /media
          #         readOnly: true
          #   backup:
          #     enabled: true
          #     existingClaim: plex-nfs-backup
          #     globalMounts:
          #       - path: /config/Backups

          persistence:
            # config:
            #   type: persistentVolumeClaim
            #   existingClaim: radarr-config
            #   advancedMounts:
            #     radarr: # <- the controller
            #       app:   # <- the container
            #         - path: /config
            config:
              existingClaim: plex-config
              type: persistentVolumeClaim
            cache:
              existingClaim: plex-cache
              globalMounts:
                - path: /config/Library/Application Support/Plex Media Server/Cache
            logs:
              type: emptyDir
              globalMounts:
                - path: /config/Library/Application Support/Plex Media Server/Logs
            tmp:
              type: emptyDir
            transcode:
              type: emptyDir
            media:
              enabled: true
              type: nfs
              server: freenas.<path:cluster-secrets:cluster-secrets#domain>
              path: /mnt/storage/media
